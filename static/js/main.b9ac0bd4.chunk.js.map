{"version":3,"sources":["CustomHooks/UseToDos.js","CustomHooks/useLocalStorage.js","ToDoHeader/index.js","ToDoCounter/index.js","ToDoSearch/index.js","ToDoList/index.js","ToDoItem/index.js","Modal/index.js","ToDoForm/index.js","ToDoError/index.js","ToDoLoading/index.js","EmptyToDos/index.js","CreateToDoButtom/index.js","ToDoFooter/index.js","App/index.js","index.js"],"names":["useToDos","itemName","initialValue","useState","sincronizedItem","setSincronizedItem","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","sincronize","useLocalStorage","toDos","saveToDos","searchValue","setSearchValue","openModal","setOpenModal","completedToDos","filter","toDo","completed","length","totalToDos","searchedToDos","toDoText","text","toLowerCase","searchText","includes","window","addEventListener","addToDo","newTodos","push","toggleCompleteToDo","toDoIndex","findIndex","newToDos","deleteToDo","splice","ToDoHeader","children","className","ToDoCounter","ToDoSearch","placeholder","value","onChange","event","target","disabled","ToDoList","onError","onLoading","onEmpty","render","onEmptySearch","renderFn","map","ToDoItem","onComplete","onDelete","onClick","Modal","ReactDOM","createPortal","document","getElementById","ToDoForm","newToDoValue","setNewToDoValue","onSubmit","preventDefault","flag","split","every","word","prevState","type","ToDoError","ToDoLoading","EmptyToDos","Fragment","CreateToDoButtom","ToDoFooter","href","rel","App"],"mappings":"0XAKA,SAASA,IACL,MCJJ,SAAyBC,EAAUC,GACjC,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEA,EAAwBN,mBAASD,GAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KA0CA,OAxCAC,qBAAU,WACRC,YAAW,WACT,IAEE,IAEIC,EAFEC,EAAmBC,aAAaC,QAAQhB,GAIzCc,EAIHD,EAAaI,KAAKC,MAAMJ,IAHxBC,aAAaL,QAAQV,EAAUiB,KAAKE,UAAUlB,IAC9CY,EAAa,IAKfH,EAAQG,GACRL,GAAW,GACXJ,GAAmB,GACnB,MAAOC,GACPC,EAASD,MAEV,OACF,CAACF,IAkBG,CACLM,OACAW,SAlBe,SAACC,GAChB,IAEE,IAAMC,EAAkBL,KAAKE,UAAUE,GACvCN,aAAaL,QAAQV,EAAUsB,GAE/BZ,EAAQW,GACR,MAAOhB,GACLC,EAASD,KAWbE,UACAF,QACAkB,WATiB,WACjBnB,GAAmB,GACnBI,GAAW,KDnCLgB,CAAgB,WAAY,IALxBC,EADV,EACIhB,KACUiB,EAFd,EAEIN,SACAb,EAHJ,EAGIA,QACAF,EAJJ,EAIIA,MACAkB,EALJ,EAKIA,WAIF,EAAsCrB,mBAAS,IAA/C,mBAAOyB,EAAP,KAAoBC,EAApB,KACA,EAAkC1B,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAEMC,EAAiBN,EAAMO,QAAO,SAACC,GAAD,QAAYA,EAAKC,aAAWC,OAC1DC,EAAaX,EAAMU,OAErBE,EAAgB,GAGlBA,GADGV,EAAYQ,QAAU,EACTV,EAEAA,EAAMO,QAAO,SAACC,GAC5B,IAAMK,EAAWL,EAAKM,KAAKC,cACrBC,EAAad,EAAYa,cAC/B,OAAOF,EAASI,SAASD,MA6B/B,OAFEE,OAAOC,iBAAiB,UAAWrB,GAE7B,CACJlB,QACAE,UACAwB,iBACAK,aACAT,cACAC,iBACAS,gBACAQ,QAjCc,SAACN,GACf,IAAMO,EAAQ,YAAOrB,GACrBqB,EAASC,KAAK,CACVb,WAAW,EACXK,SAEJb,EAAUoB,IA4BVE,mBAzByB,SAACT,GAC1B,IAAMU,EAAYxB,EAAMyB,WAAU,SAACjB,GAAD,OAAUA,EAAKM,OAASA,KACpDY,EAAQ,YAAO1B,GACrB0B,EAASF,GAAWf,WAAaT,EAAMwB,GAAWf,UAClDR,EAAUyB,IAsBVC,WAnBiB,SAACb,GAClB,IAAMU,EAAYxB,EAAMyB,WAAU,SAACjB,GAAD,OAAUA,EAAKM,OAASA,KACpDO,EAAQ,YAAOrB,GACrBqB,EAASO,OAAOJ,EAAW,GAC3BvB,EAAUoB,IAgBVjB,YACAC,gB,iBEnER,SAASwB,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SAGlB,OACI,qBAAKC,UAAU,sBAAf,SACKD,I,MCLb,SAASE,EAAT,GAA6D,IAAvC1B,EAAsC,EAAtCA,eAAgBK,EAAsB,EAAtBA,WAAY7B,EAAU,EAAVA,QAChD,OACE,gCACE,oBAAIiD,UAAS,oBAAejD,GAAW,oBAAvC,qBACA,qBAAIiD,UAAS,oBAAejD,GAAW,oBAAvC,+BACsBA,EAAW,QAAYwB,EAD7C,OACiEK,GAAc,QAD/E,e,kBCHN,SAASsB,EAAT,GAA4D,IAAvC/B,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,eAAgBrB,EAAS,EAATA,QAM9C,OACI,sBACIiD,UAAS,gCAA2BjD,GAAW,sBADnD,UAGI,uBACIiD,UAAU,aACVG,YAAY,iBACZC,MAAOjC,EACPkC,SAZgB,SAACC,GACzBlC,EAAekC,EAAMC,OAAOH,QAYpBI,SAAUzD,IAEd,cAAC,IAAD,CAAUiD,UAAU,sB,MClBhC,SAASS,EAAT,GAA0I,IAAvHV,EAAsH,EAAtHA,SAAUlD,EAA4G,EAA5GA,MAAOE,EAAqG,EAArGA,QAAS2D,EAA4F,EAA5FA,QAAS7B,EAAmF,EAAnFA,cAAe8B,EAAoE,EAApEA,UAAWC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,cAAelC,EAAyB,EAAzBA,WAAYT,EAAa,EAAbA,YAElH4C,EAAWhB,GAAYc,EAE7B,OACI,yBAASb,UAAU,cAAnB,SACI,qBAAIA,UAAU,WAAd,UACKnD,GAAS6D,IACT3D,GAAW4D,KACT5D,IAAY6B,GAAegC,MAC1BhC,IAAeC,EAAcF,QAAWmC,EAAc3C,IACvDpB,GAAY8B,EAAcmC,IAAID,Q,iBCVjD,SAASE,EAAT,GAA4D,IAAzCvC,EAAwC,EAAxCA,UAAWK,EAA6B,EAA7BA,KAAMmC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,SAC5C,OACI,qBAAInB,UAAU,WAAd,UACI,cAAC,IAAD,CACIA,UAAS,uBAAkBtB,GAAa,aACxC0C,QAASF,IAEb,oBAAGlB,UAAS,eAAUtB,GAAa,iBAAnC,cAAwDK,EAAxD,OACA,cAAC,IAAD,CACIiB,UAAU,aACVoB,QAASD,O,MCXzB,SAASE,EAAT,GAA2B,IAAXtB,EAAU,EAAVA,SACZ,OAAOuB,IAASC,aACZ,qBAAKvB,UAAU,kBAAf,SACKD,IAELyB,SAASC,eAAe,U,MCLhC,SAASC,EAAT,GAA6C,IAAzBrC,EAAwB,EAAxBA,QAASf,EAAe,EAAfA,aAEzB,EAAwC5B,mBAAS,IAAjD,mBAAOiF,EAAP,KAAqBC,EAArB,KAeA,OACI,qBAAK5B,UAAU,oBAAf,SACA,uBAAMA,UAAU,WAAW6B,SATd,SAACvB,GACdA,EAAMwB,iBACN,IAAIC,EAAOJ,EAAaK,MAAM,KAAKC,OAAM,SAAAC,GAAI,OAAIA,EAAKvD,OAAO,MAC1DgD,GAAgBI,GAAM1C,EAAQsC,GACjCrD,GAAa,SAAA6D,GAAS,OAAKA,MAK3B,UACI,uBAAOnC,UAAU,YAAjB,iCACA,0BACIA,UAAU,eACVI,MAAOuB,EACPtB,SApBK,SAACC,GACdsB,EAAgBtB,EAAMC,OAAOH,QAoBrBD,YAAY,2BAEhB,sBAAKH,UAAU,cAAf,UACI,wBACIA,UAAU,qBACVoC,KAAK,SACLhB,QAxBC,WACb9C,GAAa,SAAA6D,GAAS,OAAKA,MAoBnB,oBAOA,wBACInC,UAAU,qBACVoC,KAAK,SAFT,yBCpChB,SAASC,IACL,OACI,uE,MCDR,SAASC,IACL,OACI,sBAAKtC,UAAU,uBAAf,UACI,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,uBCP3B,SAASuC,IACL,OACI,eAAC,IAAMC,SAAP,WACI,iEACA,yE,MCHZ,SAASC,EAAT,GAAwD,IAA5BpE,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAEnC,OACI,wBACI0B,UAAU,aACVoB,QAAS,kBAAM9C,GAAcD,IAFjC,e,MCFR,SAASqE,IACL,OACI,yBAAQ1C,UAAU,aAAlB,6BAEI,mBACI2C,KAAK,uBACLpC,OAAO,SACPqC,IAAI,aAHR,mBAFJ,KAUI,mBACID,KAAK,+BACLpC,OAAO,SACPqC,IAAI,aAHR,SAKI,cAAC,IAAD,S,YCsEDC,MA3Ef,WAEE,MAaItG,IAZFM,EADF,EACEA,MACAE,EAFF,EAEEA,QACA8B,EAHF,EAGEA,cACAW,EAJF,EAIEA,mBACAI,EALF,EAKEA,WACAvB,EANF,EAMEA,UACAO,EAPF,EAOEA,WACAL,EARF,EAQEA,eACAJ,EATF,EASEA,YACAC,EAVF,EAUEA,eACAiB,EAXF,EAWEA,QACAf,EAZF,EAYEA,aAGF,OAEE,cADA,CACC,IAAMkE,SAAP,WACE,eAAC,EAAD,WACE,wBAAQxC,UAAU,aAAlB,SACI,oBAAG2C,KAAK,aAAR,cAAsB,cAAC,IAAD,IAAtB,sBAEJ,cAAC,EAAD,CACE/D,WAAYA,EACZL,eAAgBA,EAChBxB,QAASA,IAEX,cAAC,EAAD,CACEoB,YAAaA,EACbC,eAAgBA,EAChBrB,QAASA,OAGb,cAAC,EAAD,CAEEF,MAAOA,EACPE,QAASA,EACT8B,cAAeA,EACfD,WAAYA,EACZT,YAAaA,EAEbuC,QAAS,kBAAM,cAAC2B,EAAD,KACf1B,UAAW,kBAAM,cAAC,EAAD,KACjBC,QAAS,kBAAM,cAAC2B,EAAD,KACfzB,cAAe,SAAC7B,GAAD,OAAiB,wDAA2BA,MAX7D,SAaG,SAAAR,GAAI,OACH,cAAC,EAAD,CACEM,KAAMN,EAAKM,KACXL,UAAWD,EAAKC,UAEhBwC,WAAY,kBAAM1B,EAAmBf,EAAKM,OAC1CoC,SAAU,kBAAMvB,EAAWnB,EAAKM,QAF3BN,EAAKM,WAMbV,GACD,cAAC,EAAD,UACE,cAAC,EAAD,CACEgB,QAASA,EACTf,aAAcA,MAIpB,cAAC,EAAD,CACED,UAAWA,EACXC,aAAcA,IAEhB,cAAC,EAAD,Q,MCjFNgD,IAAST,OACP,cAAC,EAAD,IACAW,SAASC,eAAe,W","file":"static/js/main.b9ac0bd4.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { BiWindows } from \"react-icons/bi\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\n// Proveedor de las props de nuestro proyecto..\r\nfunction useToDos(){\r\n    const {\r\n        item: toDos,\r\n        saveItem: saveToDos, // Para actualizar en caso de exista nuevos toDos en el localStorage\r\n        loading,\r\n        error,\r\n        sincronize,\r\n      } = useLocalStorage(\"TODOS_V1\", []); //Para guardar en el localStorage con un key, los datos que queremos guardar en un primera estancia, esta vacio..\r\n      \r\n      // Variables \"escuchar\" y avisar a react cuando nuestros datos hayan cambiado\r\n      const [searchValue, setSearchValue] = useState(\"\");\r\n      const [openModal, setOpenModal] = useState(false);\r\n      // Variable para guardar los ToDo \"hechos\", y el total de ToDos\r\n      const completedToDos = toDos.filter((toDo) => !!toDo.completed).length;\r\n      const totalToDos = toDos.length;\r\n      // Nos servirá para guardar los toDo buscados\r\n      let searchedToDos = [];\r\n    \r\n      if (!searchValue.length >= 1) {\r\n        searchedToDos = toDos;\r\n      } else {\r\n        searchedToDos = toDos.filter((toDo) => {\r\n          const toDoText = toDo.text.toLowerCase();\r\n          const searchText = searchValue.toLowerCase();\r\n          return toDoText.includes(searchText);\r\n        });\r\n      }\r\n       \r\n      const addToDo = (text) => {\r\n        const newTodos = [...toDos];\r\n        newTodos.push({\r\n            completed: false,\r\n            text,\r\n        });\r\n        saveToDos(newTodos);\r\n      };\r\n\r\n      const toggleCompleteToDo = (text) => {\r\n        const toDoIndex = toDos.findIndex((toDo) => toDo.text === text);\r\n        const newToDos = [...toDos];\r\n        newToDos[toDoIndex].completed = !toDos[toDoIndex].completed;\r\n        saveToDos(newToDos);\r\n      };\r\n    \r\n      const deleteToDo = (text) => {\r\n        const toDoIndex = toDos.findIndex((toDo) => toDo.text === text);\r\n        const newTodos = [...toDos];\r\n        newTodos.splice(toDoIndex, 1);\r\n        saveToDos(newTodos);\r\n      };\r\n\r\n      window.addEventListener(\"storage\", sincronize);\r\n\r\n    return ({\r\n        error,\r\n        loading,\r\n        completedToDos,\r\n        totalToDos,\r\n        searchValue,\r\n        setSearchValue,\r\n        searchedToDos,\r\n        addToDo,\r\n        toggleCompleteToDo,\r\n        deleteToDo,\r\n        openModal,\r\n        setOpenModal,\r\n    });\r\n}\r\n\r\n\r\nexport { useToDos }","import { useState, useEffect } from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const [sincronizedItem, setSincronizedItem] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  // Aqui usaremos el estado para observar los cambios y avisar a react de un nuevoItem\r\n  const [item, setItem] = useState(initialValue);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        // Buscar si el itemName está en el localStorage\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n        // Servirá para parsear un string a un JSON.\r\n        let parsedItem;\r\n\r\n        if (!localStorageItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n          parsedItem = [];\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        }\r\n        // Actualizar ultima data como el item actual\r\n        setItem(parsedItem);\r\n        setLoading(false);\r\n        setSincronizedItem(false);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    }, 3000);\r\n  }, [sincronizedItem]);\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      // Pasar a string el array de items y setearlos en el localStorage\r\n      const stringifiedItem = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringifiedItem);\r\n      // Cuando se llame esta función guardaremos como último estado ese item pasado\r\n      setItem(newItem);\r\n    } catch (error) {\r\n        setError(error);\r\n    }\r\n  };\r\n\r\n  const sincronize = () => {\r\n    setSincronizedItem(true);\r\n    setLoading(true);\r\n  };\r\n  return {\r\n    item,\r\n    saveItem,\r\n    loading,\r\n    error,\r\n    sincronize,\r\n  };\r\n}\r\n\r\nexport { useLocalStorage };\r\n","import React from \"react\";\r\nimport \"./ToDoHeader.css\"\r\n\r\nfunction ToDoHeader({ children }){\r\n\r\n    \r\n    return (\r\n        <div className=\"toDoHeaderContainer\">\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { ToDoHeader };","import React from \"react\";\r\nimport \"./ToDoCounter.css\";\r\n\r\nfunction ToDoCounter({completedToDos, totalToDos, loading}) {\r\n  return (\r\n    <div>\r\n      <h1 className={`toDoTitle ${loading && 'toDoTitleLoading'}`}> TODOs </h1>\r\n      <h2 className={`toDoCount ${loading && 'toDoCountLoading'}`}>\r\n        You has completed {(loading && '. . .') || completedToDos} of {totalToDos || '. . .'} tasks\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ToDoCounter };\r\n","import React from \"react\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport \"./ToDoSearch.css\"\r\n\r\nfunction ToDoSearch({searchValue, setSearchValue, loading}){\r\n\r\n    const onSearchValueChange = (event) => {\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className={`toDoSearchContainer ${!!loading && 'toDoSearchDisabled'}`}\r\n        >\r\n            <input \r\n                className='toDoSearch' \r\n                placeholder='Cook dinner...' \r\n                value={searchValue}\r\n                onChange={onSearchValueChange}\r\n                disabled={loading}\r\n            />\r\n            <BiSearch className=\"toDoSearchIcon\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { ToDoSearch };","import React from \"react\";\r\nimport \"./ToDoList.css\";\r\n\r\nfunction ToDoList({children, error, loading, onError, searchedToDos, onLoading, onEmpty, render, onEmptySearch, totalToDos, searchValue}){\r\n\r\n    const renderFn = children || render\r\n\r\n    return (\r\n        <section className='toDoSection'>\r\n            <ul className=\"toDoList\">\r\n                {error && onError()}\r\n                {loading && onLoading()}\r\n                {(!loading && !totalToDos) && onEmpty()}\r\n                {(!!totalToDos && !searchedToDos.length) && onEmptySearch(searchValue)}\r\n                {(!loading) && searchedToDos.map(renderFn)}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport { ToDoList};","import React from \"react\";\r\nimport { FaCheckSquare, FaTrashAlt } from \"react-icons/fa\"\r\nimport \"./ToDoItem.css\"\r\n\r\nfunction ToDoItem({completed, text, onComplete, onDelete}) {\r\n    return (\r\n        <li className=\"toDoItem\">\r\n            <FaCheckSquare \r\n                className={`toDoCheckBox ${completed && 'toDoCheck'}`} \r\n                onClick={onComplete}\r\n            />\r\n            <p className={`toDo ${completed && 'toDoCompleted'}`}> {text} </p>\r\n            <FaTrashAlt \r\n                className=\"toDoDelete\" \r\n                onClick={onDelete}\r\n            />\r\n        </li>\r\n    )\r\n};\r\n\r\nexport { ToDoItem };","import ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\"\r\n\r\nfunction Modal({children}){\r\n    return ReactDOM.createPortal(\r\n        <div className=\"modalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n      );\r\n}\r\n\r\nexport { Modal };","import React, { useState } from \"react\";\r\nimport \"./ToDoForm.css\"\r\n\r\nfunction ToDoForm({ addToDo, setOpenModal }){\r\n\r\n    const [newToDoValue, setNewToDoValue] = useState('')\r\n\r\n    const onChange = (event) => {\r\n        setNewToDoValue(event.target.value);\r\n    };\r\n    const onCancel = () => {\r\n        setOpenModal(prevState => !prevState)\r\n    };\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        let flag = newToDoValue.split(' ').every(word => word.length<30);\r\n        if(newToDoValue && flag) addToDo(newToDoValue);\r\n        setOpenModal(prevState => !prevState)\r\n    };\r\n\r\n    return (\r\n        <div className=\"toDoFormContainer\">\r\n        <form className=\"toDoForm\" onSubmit={onSubmit}>\r\n            <label className=\"toDoLabel\"> Create a new ToDo </label>\r\n            <textarea \r\n                className=\"toDoTextArea\"\r\n                value={newToDoValue}\r\n                onChange={onChange}\r\n                placeholder=\"Cut onions for lunch..\"\r\n            />\r\n            <div className=\"toDoButtoms\">\r\n                <button\r\n                    className=\"toDoBtn toDoCancel\" \r\n                    type=\"button\" \r\n                    onClick={onCancel}\r\n                >\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"toDoBtn toDoSubmit\" \r\n                    type=\"submit\" \r\n                >\r\n                    Add\r\n                </button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { ToDoForm }","import React from \"react\";\r\n\r\nfunction ToDoError(){\r\n    return(\r\n        <p>There was an error, please try again..</p>\r\n    )\r\n};\r\n\r\nexport { ToDoError };","import React from \"react\";\r\nimport \"./ToDoLoading.css\"\r\n\r\nfunction ToDoLoading() {\r\n    return (\r\n        <div className=\"toDoLoadingContainer\">\r\n            <div className=\"toDoItemLoading\"></div>\r\n            <div className=\"toDoItemLoading\"></div>\r\n            <div className=\"toDoItemLoading\"></div>\r\n            <div className=\"toDoItemLoading\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { ToDoLoading };","import React from \"react\";\r\n\r\nfunction EmptyToDos() {\r\n    return (\r\n        <React.Fragment>\r\n            <p> You don't have any task to do..</p>\r\n            <p>Click the buttom to create new ToDos!</p>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport { EmptyToDos };","import React from \"react\";\r\nimport './CreateToDoButtom.css';\r\n\r\nfunction CreateToDoButtom({ openModal, setOpenModal }) {\r\n    \r\n    return (\r\n        <button \r\n            className=\"createToDo\"\r\n            onClick={() => setOpenModal(!openModal)}\r\n        >\r\n        +\r\n        </button>\r\n    )\r\n}\r\n\r\nexport { CreateToDoButtom };","import React from \"react\";\r\nimport { FaGithubSquare } from \"react-icons/fa\";\r\nimport \"./ToDoFooter.css\"\r\n\r\nfunction ToDoFooter(){\r\n    return (\r\n        <footer className=\"toDoFooter\">\r\n            Boostrapped with \r\n            <a \r\n                href=\"https://reactjs.org/\" \r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n            > \r\n                React \r\n            </a> \r\n            by \r\n            <a \r\n                href=\"https://github.com/abdiasejr\" \r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n            > \r\n                <FaGithubSquare /> \r\n            </a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport { ToDoFooter };","import React from \"react\";\nimport { useToDos } from \"../CustomHooks/UseToDos\";\nimport { ToDoHeader } from \"../ToDoHeader\";\nimport { ToDoCounter } from \"../ToDoCounter\";\nimport { ToDoSearch } from \"../ToDoSearch\";\nimport { ToDoList } from \"../ToDoList\";\nimport { ToDoItem } from \"../ToDoItem\";\nimport { Modal } from \"../Modal\"\nimport { ToDoForm} from \"../ToDoForm\";\nimport { ToDoError } from \"../ToDoError\"\nimport { ToDoLoading } from \"../ToDoLoading\";\nimport { EmptyToDos } from \"../EmptyToDos\"\nimport { CreateToDoButtom } from \"../CreateToDoButtom\";\nimport { ToDoFooter } from \"../ToDoFooter\";\nimport { SiTodoist } from \"react-icons/si\";\n\nfunction App() {\n\n  const { \n    error, \n    loading, \n    searchedToDos, \n    toggleCompleteToDo, \n    deleteToDo, \n    openModal, \n    totalToDos, \n    completedToDos,\n    searchValue, \n    setSearchValue,\n    addToDo, \n    setOpenModal,\n  } = useToDos();\n\n  return (\n    // Render de nuestro componentes o más bien los retorna cuando sean solicitados para renderizar en el dom\n    <React.Fragment>\n      <ToDoHeader >\n        <header className=\"toDoHeader\">\n            <a href=\"index.html\"> <SiTodoist /> ToDo Machine </a>\n        </header>\n        <ToDoCounter \n          totalToDos={totalToDos}\n          completedToDos={completedToDos}\n          loading={loading}\n        />\n        <ToDoSearch \n          searchValue={searchValue}\n          setSearchValue={setSearchValue}\n          loading={loading}\n        />\n      </ToDoHeader>\n      <ToDoList \n        \n        error={error}\n        loading={loading}\n        searchedToDos={searchedToDos}\n        totalToDos={totalToDos}\n        searchValue={searchValue}\n\n        onError={() => <ToDoError />}\n        onLoading={() => <ToDoLoading />}\n        onEmpty={() => <EmptyToDos />}\n        onEmptySearch={(searchText) => (<p>There's no results for {searchText}</p>)}\n      >\n        {toDo => (\n          <ToDoItem\n            text={toDo.text}\n            completed={toDo.completed}\n            key={toDo.text}\n            onComplete={() => toggleCompleteToDo(toDo.text)}\n            onDelete={() => deleteToDo(toDo.text)}\n          />\n        )}\n      </ToDoList>\n      {!!openModal && (\n        <Modal>\n          <ToDoForm \n            addToDo={addToDo} \n            setOpenModal={setOpenModal}  \n          />\n        </Modal>\n      )}\n      <CreateToDoButtom \n        openModal={openModal}\n        setOpenModal={setOpenModal}\n      />\n      <ToDoFooter />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}